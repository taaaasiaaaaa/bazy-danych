
1. 
INSERT INTO PRACOWNICY (ID_PRAC, NAZWISKO, ETAT, ZATRUDNIONY, PLACA_POD, ID_ZESP) VALUES (250, 'KOWALSKI', 'ASYSTENT', to_date('13-01-2015','DD-MM-YYYY'),1500.00,10);
INSERT INTO PRACOWNICY (ID_PRAC, NAZWISKO, ETAT, ZATRUDNIONY, PLACA_POD, ID_ZESP) VALUES (260, 'ADAMSKI', 'ASYSTENT', to_date('10-09-2014','DD-MM-YYYY'),1500.00,10);
INSERT INTO PRACOWNICY (ID_PRAC, NAZWISKO, ETAT, ZATRUDNIONY, PLACA_POD, PLACA_DOD, ID_ZESP) VALUES (270, 'NOWAK', 'ADIUNKT', to_date('01-05-1990','DD-MM-YYYY'),2050.00,540.00,20);
SELECT * FROM PRACOWNICY WHERE ID_PRAC >= 250

2. 	
	UPDATE PRACOWNICY
	SET
	PLACA_POD = PLACA_POD*1.1,
	PLACA_DOD = (
    		CASE
    		WHEN PLACA_DOD IS NULL THEN 100.00
    		ELSE 1.2*PLACA_DOD
    		END
	)
	WHERE ID_PRAC >= 250

SELECT * FROM PRACOWNICY WHERE ID_PRAC >= 250

3. 
INSERT INTO ZESPOLY VALUES (60,'BAZY DANYCH','PIOTROWO 2')
SELECT * FROM ZESPOLY WHERE ID_ZESP = 60

4.	
	UPDATE PRACOWNICY
	SET
	ID_ZESP = (
    		SELECT ID_ZESP FROM ZESPOLY
    		WHERE NAZWA LIKE 'BAZY%'
	)
	WHERE ID_PRAC >= 250

SELECT * FROM PRACOWNICY WHERE ID_PRAC >= 250

5. 	
	UPDATE PRACOWNICY
	SET
	ID_SZEFA = (
    		SELECT ID_PRAC FROM PRACOWNICY
    		WHERE NAZWISKO = 'MORZY'
	)
	WHERE ID_ZESP = 60

	SELECT * FROM PRACOWNICY WHERE ID_SZEFA = (
	SELECT ID_PRAC FROM PRACOWNICY WHERE NAZWISKO = 'MORZY'
)

6. Polecenie nie zadziałało: Odnaleziono rekordy które są powiązane z usuwanym elementem co naruszy integralność

7.
DELETE FROM PRACOWNICY
WHERE ID_ZESP = 60;

DELETE FROM ZESPOLY
WHERE ID_ZESP = 60;


SELECT * FROM PRACOWNICY WHERE ID_PRAC >= 250
SELECT * FROM ZESPOLY WHERE ID_ZESP = 60

8. 
WITH RAISE_COUNT AS (
    SELECT ID_ZESP, 0.1*AVG(PLACA_POD) AS PODWYZKA FROM PRACOWNICY
    GROUP BY ID_ZESP
)
SELECT P.NAZWISKO, P.PLACA_POD, RC.PODWYZKA FROM PRACOWNICY P, RAISE_COUNT RC
WHERE P.ID_ZESP = RC.ID_ZESP
ORDER BY P.NAZWISKO

9.
UPDATE PRACOWNICY P
SET
PLACA_POD = PLACA_POD + 0.1*(
    SELECT AVG(PLACA_POD) FROM PRACOWNICY
    WHERE ID_ZESP = P.ID_ZESP
)

SELECT NAZWISKO, PLACA_POD FROM PRACOWNICY
ORDER BY NAZWISKO

10.
SELECT * FROM PRACOWNICY
WHERE PLACA_POD = (SELECT MIN(PLACA_POD) FROM PRACOWNICY)

11.
UPDATE PRACOWNICY
SET 
PLACA_POD = (
    SELECT ROUND(AVG(PLACA_POD),2) FROM PRACOWNICY
)
WHERE PLACA_POD = (
    SELECT MIN(PLACA_POD) FROM PRACOWNICY
)

SELECT * FROM PRACOWNICY WHERE ID_PRAC = 200

12.
UPDATE PRACOWNICY
SET
PLACA_DOD = (
    SELECT ROUND(AVG(P.PLACA_POD),1) FROM PRACOWNICY P, PRACOWNICY S
    WHERE P.ID_SZEFA = S.ID_PRAC AND S.NAZWISKO = 'MORZY'
)
WHERE ID_ZESP = 20

13.
UPDATE (
    SELECT NAZWA, NAZWISKO, PLACA_POD FROM PRACOWNICY
    JOIN ZESPOLY USING(ID_ZESP)
    WHERE NAZWA = 'SYSTEMY ROZPROSZONE'
)
SET PLACA_POD = PLACA_POD*1.25
WHERE NAZWA = 'SYSTEMY ROZPROSZONE'

14.
DELETE FROM (
    SELECT P.NAZWISKO AS PRACOWNIK, S.NAZWISKO AS SZEF
    FROM PRACOWNICY P JOIN PRACOWNICY S
    ON P.ID_SZEFA = S.ID_PRAC
)
WHERE SZEF = 'MORZY'

15.
SELECT * FROM PRACOWNICY
ORDER BY NAZWISKO

SEKEWENCJE - ZADANIA

16.
CREATE SEQUENCE PRAC_SEQ START WITH 300 INCREMENT BY 10

17.
INSERT INTO PRACOWNICY (ID_PRAC,NAZWISKO,ETAT,PLACA_POD)
VALUES (PRAC_SEQ.NEXTVAL,'TRABCZYNSKI','STAZYSTA',1000)

SELECT * FROM PRACOWNICY WHERE NAZWISKO = 'TRABCZYNSKI'

18.
UPDATE PRACOWNICY
SET
PLACA_DOD = PRAC_SEQ.CURRVAL
WHERE NAZWISKO = 'TRABCZYNSKI'

19.
DELETE FROM PRACOWNICY
WHERE NAZWISKO = 'TRABCZYNSKI'

20.
CREATE SEQUENCE MALA_SEQ START WITH 5 INCREMENT BY 1 MAXVALUE 10

SELECT MALA_SEQ.NEXTVAL FROM dual; ---> Polecenie nie chce się wykonać, ponieważ przekoroczono max value oraz polecenie nie może zostać "skonkretyzowane" (reprezentowane przez instancje)

21. 
DROP SEQUENCE MALA_SEQ


 
